name: Shanal Cars CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: "18"
  FIREBASE_PROJECT_ID: shanal-8b8c8

jobs:
  # Job 1: Code Quality & Security
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          cd functions && npm ci

      - name: Run ESLint
        run: |
          npm run lint
          cd functions && npm run lint

      - name: Run TypeScript checks
        run: |
          npm run build
          cd functions && npm run build

      - name: Security audit
        run: |
          npm audit --audit-level moderate
          cd functions && npm audit --audit-level moderate

      - name: Code coverage
        run: npm run test:coverage

  # Job 2: Frontend Testing
  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm run test

      - name: Run e2e tests
        run: npm run e2e

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: dist/

  # Job 3: Backend Testing
  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: cd functions && npm ci

      - name: Run function tests
        run: cd functions && npm test

      - name: Test payment flow
        run: node scripts/test-payment-flow.js

      - name: Build functions
        run: cd functions && npm run build

      - name: Upload function artifacts
        uses: actions/upload-artifact@v4
        with:
          name: functions-build
          path: functions/lib/

  # Job 4: Integration Testing
  integration-tests:
    runs-on: ubuntu-latest
    needs: [code-quality, frontend-tests, backend-tests]
    services:
      firebase-emulator:
        image: node:18
        ports:
          - 4000:4000
          - 5000:5000
          - 5001:5001
          - 8080:8080
          - 8081:8081
          - 9099:9099

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          cd functions && npm ci

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Start Firebase emulators
        run: |
          firebase emulators:start --only firestore,auth,functions &
          sleep 30

      - name: Run integration tests
        run: |
          npm run test:integration
          node scripts/test-payment-flow.js

      - name: Test admin onboarding
        run: node scripts/test-admin-onboarding.js

  # Job 5: Security Scanning
  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  # Job 6: Deploy to Staging
  deploy-staging:
    runs-on: ubuntu-latest
    needs: [integration-tests, security-scan]
    if: github.ref == 'refs/heads/develop'
    environment: staging

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          cd functions && npm ci

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Authenticate to Firebase
        run: echo "${{ secrets.FIREBASE_TOKEN }}" | firebase login:ci

      - name: Deploy to staging
        run: |
          firebase use staging
          firebase deploy --only hosting,functions,firestore:rules

      - name: Run smoke tests
        run: |
          npm run test:smoke
          node scripts/test-staging-deployment.js

      - name: Notify team
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: "#deployments"
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}

  # Job 7: Deploy to Production
  deploy-production:
    runs-on: ubuntu-latest
    needs: [deploy-staging]
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          cd functions && npm ci

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Authenticate to Firebase
        run: echo "${{ secrets.FIREBASE_TOKEN }}" | firebase login:ci

      - name: Pre-deployment backup
        run: |
          firebase use production
          node scripts/backup-production-data.js

      - name: Deploy to production
        run: |
          firebase deploy --only hosting,functions,firestore:rules

      - name: Run production tests
        run: |
          npm run test:production
          node scripts/test-production-deployment.js

      - name: Health check
        run: |
          curl -f https://shanal-cars.web.app/health || exit 1
          curl -f https://shanal-cars.web.app/api/health || exit 1

      - name: Notify team
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: "#deployments"
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            Automated deployment to production

            Changes:
            - ${{ github.event.head_commit.message }}

            Deployment Status: ${{ job.status }}
          draft: false
          prerelease: false

  # Job 8: Post-Deployment Monitoring
  post-deployment-monitoring:
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Monitor deployment
        run: |
          node scripts/monitor-deployment.js
          sleep 300  # Wait 5 minutes
          node scripts/verify-deployment-health.js

      - name: Generate deployment report
        run: node scripts/generate-deployment-report.js

      - name: Upload deployment report
        uses: actions/upload-artifact@v4
        with:
          name: deployment-report
          path: deployment-report.json
